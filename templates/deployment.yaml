apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kafka-app.fullname" . }}
  labels:
    {{- include "kafka-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      {{- include "kafka-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "kafka-app.selectorLabels" . | nindent 8 }}
      {{- if .Values.metrics.enabled }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.monitoring.port | quote }}
        prometheus.io/path: {{ .Values.monitoring.path }}
      {{- end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
            {{- if .Values.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.monitoring.port }}
              protocol: TCP
            {{- end }}
          {{- if .Values.deployment.probes.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.deployment.probes.liveness.path }}
              port: http
          readinessProbe:
            httpGet:
              path: {{ .Values.deployment.probes.readiness.path }}
              port: http
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "kafka-app.fullname" . }}-config
          {{- if .Values.kafka.security.enabled }}
            - secretRef:
                name: {{ include "kafka-app.fullname" . }}-kafka-auth
          {{- end }}
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}